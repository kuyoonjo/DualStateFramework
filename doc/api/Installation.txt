/**
\page Installation Installation
Dual State Framework uses \link yctools yctools \endlink and \link tbb Intel tbb \endlink. Before the installation you need to install them first.

\section Mac Mac OS X
\subsection dependencies_mac Install Dependencies
\par yctools
Download: \link https://sourceforge.net/projects/yctools/ https://sourceforge.net/projects/yctools/ \endlink <br />
Download the pkg file and install it.

\par Intel tbb
Download: \link https://www.threadingbuildingblocks.org/download https://www.threadingbuildingblocks.org/download \endlink <br />
Download the OS X version and unzip it. <br />
Inside the directory, copy "libtbb.dylib" in the subdirectory "lib" to "/usr/lib" or "/usr/local/lib". <br />
Next, copy the directory "include/dsf" to "/usr/include" or "/usr/local/include".

\subsection dsf_mac Install Dual State Framework
Download: \link https://sourceforge.net/projects/dualstateframework/ https://sourceforge.net/projects/dualstateframework/ \endlink <br />
Download the pkg file and install it.

\subsection use_mac Use DSF in Xcode
To use this framework in Xcode is very simple. You just need to drag dsf.framework and yctools.framework to your project explorer.


\section Win Microsoft Windows
\subsection dependencies_win Install Dependencies
\par yctools
Download: \link https://sourceforge.net/projects/yctools/ https://sourceforge.net/projects/yctools/ \endlink <br />
Download the exe file and install it. <br />
The installation will create an environment variable "yctools" which refers to the program installed path.

\par Intel tbb
Download: \link https://www.threadingbuildingblocks.org/download https://www.threadingbuildingblocks.org/download \endlink <br />
Download the Window OS version and unzip it. <br />
Inside the directory, copy "tbb.lib" in the subdirectory "lib/your architecture/your visual studio version" to "where you want to store them/lib". <br />
Copy "tbb.dll" in the subderectory "bin/your architecture/your visual studio version" to "where you want to store them/bin". <br />
Add an environment variable "tbb", and set its value to "where you want to store them". <br />
Next, copy the directory "include/dsf" to "where you want to store them/include".
\subsection dsf_win Install Dual State Framework
Download: \link https://sourceforge.net/projects/dualstateframework/ https://sourceforge.net/projects/dualstateframework/ \endlink <br />
Download the exe file and install it. <br />
The installation will create an environment variable "dsf" which refers to the program installed path.

\subsection use_win Use DSF in Visual Studio
\par Add additional header path
In project properties -> C/C++ -> General -> Additional Include Directories, add \$(yctools)\\include, \$(dsf)\\include, and \$(tbb)\\include.

\par Add Dependencies
In project properties -> Linker -> General -> Additional Library Directories, add \$(yctools)\\lib, \$(dsf)\\lib, and \$(tbb)\\lib. <br />
In project properties -> Linker -> Input -> Additional Dependencies, add yctools.lib, tbb.lib, and dsf.lib.

\section Linux Linux
This page is only for Linux with Debian package management tools (Debian, ubuntu, and etc.). Other Linux users please visit \link source Compile source code \endlink.
\subsection dependencies_linux Install Dependencies
\par yctools
Download: \link https://sourceforge.net/projects/yctools/ https://sourceforge.net/projects/yctools/ \endlink <br />
Download the deb file and install it.

\par Intel tbb
In terminal or console, type
~~~~~~~~~~~~
$ sudo apt-get install libtbb2
~~~~~~~~~~~~

\subsection dsf_linux Install Dual State Framework
Download: \link https://sourceforge.net/projects/dualstateframework/ https://sourceforge.net/projects/dualstateframework/ \endlink <br />
Download the deb file and install it.


\section source Compile source code
To compile the code, you need a C++ compiler with c++11 supported, git, and CMake.

\subsection pre_source Pre-Build
\par Get source code
~~~~~~~~~~~~~~~~~~
$ git clone https://github.com/kuyoonjo/DualStateFramework.git
~~~~~~~~~~~~~~~~~~
\par Generate project for compiler
GUI version of CMake is recommended to generate the project. For more information about cmake, please visit \link http://www.cmake.org http://www.cmake.org \endlink.

\subsection compile_source Build the project
If you generate an Xcode, Visual Studio, or any other GUI IDE project, just open the project and build it. <br />
If you generate a Makefile project, in a terminal or console, type
~~~~~~~~~~~~~~~~~~
$ cd "your project directory"
$ make
~~~~~~~~~~~~~~~~~~
Good luck!
*/